name: Terraform + Docker CI/CD

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPO_NAME: dev-scrum-frontend
  NODE_VERSION: 20.x  # Latest LTS for React/Next.js

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # 3️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4️⃣ Terraform Init
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      # 5️⃣ Terraform Apply
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

  docker:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # 3️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 4️⃣ Setup Docker Buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5️⃣ Login to AWS ECR
      - name: Login to AWS ECR
        run: |
          ECR_URI=$(aws ecr describe-repositories \
            --repository-names $ECR_REPO_NAME \
            --query "repositories[0].repositoryUri" \
            --output text)
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

      # 6️⃣ Build and push Docker image
      - name: Build & Push Docker Image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD || echo "latest")
          docker build -t $ECR_URI:latest .
          docker tag $ECR_URI:latest $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG
