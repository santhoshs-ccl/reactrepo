name: Terraform + Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # 4. Terraform Init
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # 5. Terraform Apply (pushes Docker image via Terraform)
      - name: Terraform Apply
        working-directory: terraform
        run: |
          TF_LOG=ERROR terraform apply -auto-approve

      # 6. Run Docker container from Terraform-pushed image
      - name: Run Docker Container
        run: |
          # Get the full image URL (including tag) from Terraform output
          IMAGE_URL=$(terraform -chdir=terraform output -raw ecr_image_url)

          # Login to ECR so Docker can pull the image
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
            docker login --username AWS --password-stdin $(echo $IMAGE_URL | cut -d':' -f1)

          # Pull and run the Docker container
          docker pull $IMAGE_URL
          docker run -d -p 3000:3000 $IMAGE_URL
