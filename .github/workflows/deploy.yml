name: Terraform + Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # 4. Terraform Init
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # 5. Terraform Apply
      - name: Terraform Apply
        working-directory: terraform
        run: |
          # Suppress debug messages to avoid pollution
          TF_LOG=ERROR terraform apply -auto-approve

      # 6. Get ECR URL safely
      - name: Get ECR URL
        id: ecr
        working-directory: terraform
        run: |
          # Capture only the actual URL, ignore debug lines
          ECR_URL=$(terraform output -raw ecr_repository_url 2>/dev/null | head -n1)
          echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV
          echo "ECR_URL=$ECR_URL"

      # 7. Login to ECR
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_URL }}

      # 8. Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t my-frontend:latest .
          docker tag my-frontend:latest ${{ env.ECR_URL }}:latest
          docker push ${{ env.ECR_URL }}:latest
